/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp F      &kp P  &kp B        &kp J    &kp L  &kp U      &kp Y    &kp SQT           &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp R  &kp S      &kp T  &kp G        &kp M    &kp N  &kp E      &kp I    &kp O             &kp LEFT_SHIFT
&kp LEFT_ALT    &kp Z  &kp X  &kp C      &kp D  &kp V        &kp K    &kp H  &kp COMMA  &kp DOT  &kp LEFT_BRACKET  &kp LEFT_ALT
                              &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |BTCLR|     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TILDE  &kp EXCL        &kp AT     &kp HASH    &kp DOLLAR     &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR   &kp RPAR           &kp BSPC
&kp EQUAL  &kp N1          &kp N2     &kp N3      &kp N4         &kp N5       &kp N6     &kp N7     &kp N8        &kp N9     &kp N0             &kp QUESTION
&none      &kp UNDERSCORE  &kp COLON  &kp PERIOD  &kp SEMICOLON  &kp GRAVE    &kp PLUS   &kp MINUS  &kp ASTERISK  &kp SLASH  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH
                                      &none       &none          &none        &kp SPACE  &kp ENTER  &mo 3
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TILDE     &kp F1    &kp F2        &kp F3        &kp F4        &kp F5       &kp F6      &kp F7           &kp F8       &kp F9         &kp F10  &tog 0
&kp TAB       &kp LEFT  &kp UP_ARROW  &kp DOWN      &kp RIGHT     &kp F11      &kp F12     &kp HOME         &kp PAGE_UP  &kp PAGE_DOWN  &kp END  &kp RIGHT_CONTROL
&kp LEFT_ALT  &none     &kp K_PASTE   &kp K_CUT     &kp K_COPY    &kp INS      &kp DELETE  &kp PRINTSCREEN  &none        &kp K_MENU     &none    &kp LEFT_ALT
                                      &kp LEFT_ALT  &kp LEFT_WIN  &kp LCTRL    &none       &none            &none
            >;
        };

        control_layer {
            bindings = <
&out OUT_TOG       &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &kp C_MUTE  &kp C_VOL_UP  &kp C_VOLUME_DOWN  &none           &none  &bootloader
&kp CAPS           &tog 1        &tog 2        &tog 3        &tog 4        &none           &kp C_PLAY  &kp C_PAUSE   &kp C_NEXT         &kp C_PREVIOUS  &none  &sys_reset
&ext_power EP_TOG  &none         &none         &none         &none         &none           &none       &none         &none              &none           &none  &bt BT_CLR
                                               &none         &none         &none           &none       &none         &none
            >;
        };

        game_layer {
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E   &kp R   &kp T        &kp LEFT  &kp UP_ARROW  &kp DOWN   &kp RIGHT  &none   &tog 0
&kp F13     &kp A  &kp S  &kp D   &kp F   &kp G        &none     &mkp LCLK     &mkp RCLK  &mkp MCLK  &trans  &trans
&kp F14     &kp Z  &kp X  &kp C   &kp V   &kp M        &none     &none         &trans     &trans     &trans  &trans
                          &trans  &trans  &kp SPACE    &mo 2     &trans        &trans
            >;
        };
    };
};
